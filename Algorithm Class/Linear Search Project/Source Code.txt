#include <iostream>
#include <cstdlib>
#include <time.h>
#include <iomanip>

using namespace std;

int linearSearch(int arr[], int n, int x)
{
    int i;
    for (i = 0; i < n; i++)
        if (arr[i] == x)
            return i;
    return -1;
}

int binarySearch(int arr[], int left, int right, int x) {
    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == x) {
            return mid;
        }
        else if (arr[mid] < x) {
            left = mid + 1;
        }
        else {
            right = mid - 1;
        }
    }

    return -1;
}

void swap(int* xp, int* yp)
{
    int temp = *xp;
    *xp = *yp;
    *yp = temp;
}

// A function to implement bubble sort
void bubbleSort(int arr[], int n)
{
    int i, j;
    for (i = 0; i < n - 1; i++)

        // Last i elements are already in place
        for (j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1])
                swap(&arr[j], &arr[j + 1]);
}

int main() {
    int myarr[1000];
    int num;
    int output, t;

    clock_t start, end;

    for (int i = 0; i < 100; i++) {
        t = rand() % 100;
        myarr[i] = t;
    }
    cout << "Please enter an element to search" << endl;
    cin >> num;


    start = clock();

    output = linearSearch(myarr, 100, num);
    if (output == -1) {
        cout << "No Match Found" << endl;
    }
    else {
        cout << "Match found at position: " << output << endl;
    }

    // Recording the end clock tick.
    end = clock();

    // Calculating total time taken by the program.
    double time_taken = double(end - start) / double(CLOCKS_PER_SEC);
    cout << "Time taken by program is : " << fixed
        << time_taken << setprecision(5);
    cout << " sec " << endl;



    start = clock();
    bubbleSort(myarr, 100);
    output = binarySearch(myarr, 0, 99, num);

    if (output == -1) {
        cout << "No Match Found" << endl;
    }
    else {
        cout << "Match found at position: " << output << endl;
    }
    end = clock();

    // Calculating total time taken by the program.
    time_taken = double(end - start) / double(CLOCKS_PER_SEC);
    cout << "Time taken by program is : " << fixed
        << time_taken << setprecision(5);
    cout << " sec " << endl;
    return 0;
}